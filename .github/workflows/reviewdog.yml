name: reviewdog
on: [pull_request]
jobs:
  reviewdog:
    name: reviewdog
    runs-on: ubuntu-latest
    steps:
      - name: Setup reviewdog
        run: |
          mkdir -p $HOME/bin && curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s -- -b $HOME/bin
          echo ::add-path::$HOME/bin
      - name: Setup phpcs
        run: |
          curl -L https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar -o $HOME/bin/phpcs
          chmod +x $HOME/bin/phpcs
      - name: Setup phpstan
        run: |
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          php -r "if (hash_file('sha384', 'composer-setup.php') === 'e5325b19b381bfd88ce90a5ddb7823406b2a38cff6bb704b0acc289a09c8128d4a8ce2bbafcd1fcbdc38666422fe2806') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
          php composer-setup.php
          php -r "unlink('composer-setup.php');"
          mv composer.phar $HOME/bin/composer
          composer global require phpstan/phpstan
          echo ::add-path::$HOME/.composer/vendor/bin
      - name: Check out code
        uses: actions/checkout@master
        with:
          fetch-depth: 0
      - name: Run reviewdog with phpstan
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          phpstan analyse ./app ./src \
            | reviewdog -f=phpstan -reporter="github-pr-review"
      - name: Run reviewdog with phpcs
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          phpcs --standard=PSR12 --report=checkstyle \
            --runtime-set ignore_errors_on_exit 1 \
            --runtime-set ignore_warnings_on_exit 1 \
            $(git diff --diff-filter=AM --name-only origin/${GITHUB_BASE_REF}..origin/${GITHUB_HEAD_REF} | grep "\.php$") \
            | reviewdog -f=checkstyle -reporter="github-pr-review"
      - name: Run phpcs
        if: always()
        run: |
          phpcs --standard=PSR12 --report=summary \
            $(git diff --diff-filter=AM --name-only origin/${GITHUB_BASE_REF}..origin/${GITHUB_HEAD_REF} | grep "\.php$")
